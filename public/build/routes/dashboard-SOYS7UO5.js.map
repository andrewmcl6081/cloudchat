{
  "version": 3,
  "sources": ["../../../app/routes/dashboard.tsx", "../../../app/components/auth/RequireAuth.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/dashboard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/dashboard.tsx\");\n  import.meta.hot.lastModified = \"1729810286106.3152\";\n}\n// REMIX HMR END\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useEffect } from \"react\";\nimport { useFetcher } from \"@remix-run/react\";\nimport { RequireAuth } from \"~/components/auth/RequireAuth\";\nexport default function Dashboard() {\n  _s();\n  // Get user data and logout function from Auth0\n  const {\n    user,\n    logout\n  } = useAuth0();\n  // Initialize fetcher for making POST requests without navigation\n  const fetcher = useFetcher();\n  useEffect(() => {\n    // Only attempt to sync if we have the required user data\n    if (user?.sub && user?.email) {\n      // Create FormData object - this is what Remix expects\n      const formData = new FormData();\n      // Add user data to FormData\n      formData.append(\"sub\", user.sub);\n      formData.append(\"email\", user.email);\n      // Only append name if it exists\n      if (user.name) {\n        formData.append(\"name\", user.name);\n      }\n\n      // Submit the FormData to our sync endpoint\n      fetcher.submit(formData,\n      // FormData object instead of plain object\n      {\n        method: \"post\",\n        // Use POST method\n        action: \"/auth/sync\" // Endpoint to handle the sync\n      });\n    }\n  }, [user]); // Re-run effect if user object changes\n\n  return <RequireAuth>\n      <div className=\"min-h-screen bg-gray-50\">\n        <nav className=\"bg-white shadow\">\n          <div className=\"mx-auto max-w-7xl px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex h-16 justify-between\">\n              <div className=\"flex items-center\">\n                <h1 className=\"text-xl font-bold\">CloudChat</h1>\n              </div>\n              <div className=\"flex items-center gap-4\">\n                <span className=\"text-gray-700\">{user?.email}</span>\n                <button onClick={() => logout({\n                logoutParams: {\n                  returnTo: window.location.origin\n                }\n              })} className=\"rounded bg-red-600 px-4 py-2 text-white hover:bg-red-700\">\n                  Logout\n                </button>\n              </div>\n            </div>\n          </div>\n        </nav>\n        <main className=\"mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8\">\n          <h2 className=\"text-2xl font-bold\">Welcome, {user?.name || user?.email}!</h2>\n          {/* Add your chat interface here */}\n        </main>\n      </div>\n    </RequireAuth>;\n}\n_s(Dashboard, \"hoVraio+sIBJz9Dguj49FksCWA8=\", false, function () {\n  return [useAuth0, useFetcher];\n});\n_c = Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/auth/RequireAuth.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/auth/RequireAuth.tsx\");\n  import.meta.hot.lastModified = \"1729810286104.9622\";\n}\n// REMIX HMR END\n\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { useEffect } from \"react\";\nexport function RequireAuth({\n  children\n}) {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading,\n    error\n  } = useAuth0();\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Debug log to see auth state\n    console.log('Auth State:', {\n      isAuthenticated,\n      isLoading,\n      error: error?.message\n    });\n    if (!isLoading && !isAuthenticated) {\n      navigate(\"/login\");\n    }\n  }, [isLoading, isAuthenticated, navigate, error]);\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n  return children;\n}\n_s(RequireAuth, \"ONsuLVNopicvnN8seTWRDn7U0kg=\", false, function () {\n  return [useAuth0, useNavigate];\n});\n_c = RequireAuth;\nvar _c;\n$RefreshReg$(_c, \"RequireAuth\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_jsx_dev_runtime", "_s", "_c"]
}
